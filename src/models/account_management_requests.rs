/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountManagementRequests {
    #[serde(rename = "updateExternalIds", skip_serializing_if = "Option::is_none")]
    pub update_external_ids: Option<Vec<models::UpdateExternalId>>,
    #[serde(rename = "updatePropertyProfiles", skip_serializing_if = "Option::is_none")]
    pub update_property_profiles: Option<Vec<models::UpdatePropertyProfile>>,
    #[serde(rename = "updateAccountAliases", skip_serializing_if = "Option::is_none")]
    pub update_account_aliases: Option<Vec<models::UpdateAccountAlias>>,
    #[serde(rename = "changeBaseCurrencies", skip_serializing_if = "Option::is_none")]
    pub change_base_currencies: Option<Vec<models::ChangeBaseCurrency>>,
    #[serde(rename = "abandonAccounts", skip_serializing_if = "Option::is_none")]
    pub abandon_accounts: Option<Vec<models::AbandonAccount>>,
    #[serde(rename = "addNewUsers", skip_serializing_if = "Option::is_none")]
    pub add_new_users: Option<Vec<models::AddNewUser>>,
    #[serde(rename = "addLevFxCapabilities", skip_serializing_if = "Option::is_none")]
    pub add_lev_fx_capabilities: Option<Vec<models::AddLevfxCapability>>,
    #[serde(rename = "addMiFirData", skip_serializing_if = "Option::is_none")]
    pub add_mi_fir_data: Option<Vec<models::AddMiFirData>>,
    #[serde(rename = "addTradingPermissions", skip_serializing_if = "Option::is_none")]
    pub add_trading_permissions: Option<Vec<models::AddTradingPermissions>>,
    #[serde(rename = "removeTradingPermissions", skip_serializing_if = "Option::is_none")]
    pub remove_trading_permissions: Option<Vec<models::RemoveTradingPermissions>>,
    #[serde(rename = "changeMarginTypes", skip_serializing_if = "Option::is_none")]
    pub change_margin_types: Option<Vec<models::ChangeMarginType>>,
    #[serde(rename = "addCLPCapabilities", skip_serializing_if = "Option::is_none")]
    pub add_clp_capabilities: Option<Vec<models::AddClpCapability>>,
    #[serde(rename = "changeFinancialInformation", skip_serializing_if = "Option::is_none")]
    pub change_financial_information: Option<Vec<models::ChangeFinancialInformation>>,
    #[serde(rename = "resetAbandonedAccounts", skip_serializing_if = "Option::is_none")]
    pub reset_abandoned_accounts: Option<Vec<models::ResetAbandonedAccount>>,
    #[serde(rename = "updateCredentials", skip_serializing_if = "Option::is_none")]
    pub update_credentials: Option<Vec<models::UpdateCredentials>>,
    #[serde(rename = "updateAccountRepresentatives", skip_serializing_if = "Option::is_none")]
    pub update_account_representatives: Option<Vec<models::UpdateAccountRepresentatives>>,
    #[serde(rename = "completeLoginMessages", skip_serializing_if = "Option::is_none")]
    pub complete_login_messages: Option<Vec<models::CompleteLoginMessage>>,
    #[serde(rename = "reopenAccounts", skip_serializing_if = "Option::is_none")]
    pub reopen_accounts: Option<Vec<models::ReopenAccount>>,
    #[serde(rename = "enrollInSyep", skip_serializing_if = "Option::is_none")]
    pub enroll_in_syep: Option<Vec<models::EnrollInSyep>>,
    #[serde(rename = "leaveSyep", skip_serializing_if = "Option::is_none")]
    pub leave_syep: Option<Vec<models::LeaveSyep>>,
    #[serde(rename = "enrollInDrip", skip_serializing_if = "Option::is_none")]
    pub enroll_in_drip: Option<Vec<models::EnrollInDrip>>,
    #[serde(rename = "leaveDrip", skip_serializing_if = "Option::is_none")]
    pub leave_drip: Option<Vec<models::LeaveDrip>>,
    #[serde(rename = "updateW8Ben", skip_serializing_if = "Option::is_none")]
    pub update_w8_ben: Option<Vec<models::UpdateW8Ben>>,
    #[serde(rename = "yodleeSession", skip_serializing_if = "Option::is_none")]
    pub yodlee_session: Option<Box<models::YodleeSession>>,
    #[serde(rename = "enableAccountsInBrokerage", skip_serializing_if = "Option::is_none")]
    pub enable_accounts_in_brokerage: Option<Vec<models::EnableAccountInBrokerage>>,
    #[serde(rename = "disableAccountsInBrokerage", skip_serializing_if = "Option::is_none")]
    pub disable_accounts_in_brokerage: Option<Vec<models::DisableAccountInBrokerage>>,
    #[serde(rename = "linkDuplicateAccounts", skip_serializing_if = "Option::is_none")]
    pub link_duplicate_accounts: Option<Vec<models::LinkDuplicateAccount>>,
    #[serde(rename = "duplicateAccounts", skip_serializing_if = "Option::is_none")]
    pub duplicate_accounts: Option<Vec<models::DuplicateAcctRequest>>,
    #[serde(rename = "achInstructions", skip_serializing_if = "Option::is_none")]
    pub ach_instructions: Option<Vec<models::AchInstruction>>,
    #[serde(rename = "recurringTransactions", skip_serializing_if = "Option::is_none")]
    pub recurring_transactions: Option<Vec<models::RecurringTransaction>>,
    #[serde(rename = "depositNotifications", skip_serializing_if = "Option::is_none")]
    pub deposit_notifications: Option<Vec<models::DepositNotification>>,
    #[serde(rename = "documentSubmission", skip_serializing_if = "Option::is_none")]
    pub document_submission: Option<Vec<models::DocumentSubmission>>,
    #[serde(rename = "processDocuments", skip_serializing_if = "Option::is_none")]
    pub process_documents: Option<Box<models::ProcessDocuments>>,
    #[serde(rename = "updateBcan", skip_serializing_if = "Option::is_none")]
    pub update_bcan: Option<Vec<models::UpdateBcan>>,
    #[serde(rename = "prohibitedCountryQuestionnaires", skip_serializing_if = "Option::is_none")]
    pub prohibited_country_questionnaires: Option<Vec<models::ProhibitedCountryQuestionnaire>>,
    #[serde(rename = "updateWithholdingStatements", skip_serializing_if = "Option::is_none")]
    pub update_withholding_statements: Option<Vec<models::UpdateWithholdingStatement>>,
    #[serde(rename = "accreditedInvestors", skip_serializing_if = "Option::is_none")]
    pub accredited_investors: Option<Vec<models::AccreditedInvestor>>,
    #[serde(rename = "changeAccountHolderDetails", skip_serializing_if = "Option::is_none")]
    pub change_account_holder_details: Option<Vec<models::ChangeAccountHolderDetail>>,
    #[serde(rename = "getJavaScript", skip_serializing_if = "Option::is_none")]
    pub get_java_script: Option<Box<models::GetJavaScript>>,
    #[serde(rename = "updateUserAccessRights", skip_serializing_if = "Option::is_none")]
    pub update_user_access_rights: Option<Vec<models::UpdateUserAccessRights>>,
    #[serde(rename = "informationChange", skip_serializing_if = "Option::is_none")]
    pub information_change: Option<Vec<models::InformationChange>>,
    #[serde(rename = "addAdditionalAccounts", skip_serializing_if = "Option::is_none")]
    pub add_additional_accounts: Option<Vec<models::AddAdditionalAcct>>,
    #[serde(rename = "allocateVan", skip_serializing_if = "Option::is_none")]
    pub allocate_van: Option<Vec<models::AllocateVan>>,
    #[serde(rename = "createUsersForSecondHolder", skip_serializing_if = "Option::is_none")]
    pub create_users_for_second_holder: Option<Vec<models::CreateUserForSecondHolder>>,
    #[serde(rename = "createUsers", skip_serializing_if = "Option::is_none")]
    pub create_users: Option<Vec<models::CreateUser>>,
    #[serde(rename = "updateTaxForms", skip_serializing_if = "Option::is_none")]
    pub update_tax_forms: Option<Vec<models::UpdateTaxForm>>,
}

impl AccountManagementRequests {
    pub fn new() -> AccountManagementRequests {
        AccountManagementRequests {
            update_external_ids: None,
            update_property_profiles: None,
            update_account_aliases: None,
            change_base_currencies: None,
            abandon_accounts: None,
            add_new_users: None,
            add_lev_fx_capabilities: None,
            add_mi_fir_data: None,
            add_trading_permissions: None,
            remove_trading_permissions: None,
            change_margin_types: None,
            add_clp_capabilities: None,
            change_financial_information: None,
            reset_abandoned_accounts: None,
            update_credentials: None,
            update_account_representatives: None,
            complete_login_messages: None,
            reopen_accounts: None,
            enroll_in_syep: None,
            leave_syep: None,
            enroll_in_drip: None,
            leave_drip: None,
            update_w8_ben: None,
            yodlee_session: None,
            enable_accounts_in_brokerage: None,
            disable_accounts_in_brokerage: None,
            link_duplicate_accounts: None,
            duplicate_accounts: None,
            ach_instructions: None,
            recurring_transactions: None,
            deposit_notifications: None,
            document_submission: None,
            process_documents: None,
            update_bcan: None,
            prohibited_country_questionnaires: None,
            update_withholding_statements: None,
            accredited_investors: None,
            change_account_holder_details: None,
            get_java_script: None,
            update_user_access_rights: None,
            information_change: None,
            add_additional_accounts: None,
            allocate_van: None,
            create_users_for_second_holder: None,
            create_users: None,
            update_tax_forms: None,
        }
    }
}

