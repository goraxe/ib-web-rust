/*
 * IB REST API
 *
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@interactivebrokers.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProcessDocuments {
    #[serde(rename = "documents", skip_serializing_if = "Option::is_none")]
    pub documents: Option<Vec<models::Document>>,
    #[serde(rename = "inputLanguage", skip_serializing_if = "Option::is_none")]
    pub input_language: Option<InputLanguage>,
    #[serde(rename = "hasTranslation", skip_serializing_if = "Option::is_none")]
    pub has_translation: Option<bool>,
}

impl ProcessDocuments {
    pub fn new() -> ProcessDocuments {
        ProcessDocuments {
            documents: None,
            input_language: None,
            has_translation: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InputLanguage {
    #[serde(rename = "en")]
    En,
    #[serde(rename = "zh-Hans")]
    ZhHans,
    #[serde(rename = "ja")]
    Ja,
    #[serde(rename = "ru")]
    Ru,
}

impl Default for InputLanguage {
    fn default() -> InputLanguage {
        Self::En
    }
}

